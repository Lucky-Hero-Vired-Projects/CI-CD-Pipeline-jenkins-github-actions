name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REPO_URL: 'https://github.com/Lucky-Hero-Vired-Projects/CI-CD-Pipeline-jenkins-github-actions.git'
  ECR_REPO: '975050024946.dkr.ecr.us-west-2.amazonaws.com/lucky-repos'
  K8S_MANIFEST_PATH: 'k8s'
  CLUSTER_NAME: 'lucky-eks-cluster'
  AWS_REGION: 'us-west-2'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          if aws --version 2>/dev/null; then
            echo "AWS CLI is already installed, updating..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update
          else
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi
          aws --version

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl version --client

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce
          sudo systemctl start docker
          sudo systemctl enable docker
          docker --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure Kubernetes Context
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO }}

      - name: Build Docker Image
        env:
          DOCKER_IMAGE_TAG: "${{ env.ECR_REPO }}:${{ github.run_id }}"
        run: |
          docker build -t $DOCKER_IMAGE_TAG .

      - name: Push Docker Image to ECR
        env:
          DOCKER_IMAGE_TAG: "${{ env.ECR_REPO }}:${{ github.run_id }}"
        run: |
          docker push $DOCKER_IMAGE_TAG

      - name: Deploy to Kubernetes
        env:
          DOCKER_IMAGE_TAG: "${{ env.ECR_REPO }}:${{ github.run_id }}"
          K8S_MANIFEST_PATH: "${{ env.K8S_MANIFEST_PATH }}"
        run: |
          kubectl apply -f $K8S_MANIFEST_PATH
